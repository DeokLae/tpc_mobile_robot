amcl:
  ros__parameters:
    use_sim_time: False
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: "base_footprint"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 0.2
    update_min_a: 0.01
    update_min_d: 0.01
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan

amcl_map_client:
  ros__parameters:
    use_sim_time: False

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: False

bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: /odom
    default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"
    bt_loop_duration: 10
    default_server_timeout: 20
    enable_groot_monitoring: True
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: False

controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 10.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]
    use_costmap_filters: true
    costmap_filter_info_topic: "/costmap_filter_info"

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.3
      movement_time_allowance: 10.0

    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.2

    # DWB parameters
    #FollowPath:
    #  plugin: "dwb_core::DWBLocalPlanner"
    #  lethal_cost_threshold: 253
    #  debug_trajectory_details: True
    #  min_vel_x: -0.25
    #  min_vel_y: 0.0
    #  max_vel_x: 0.25
    #  max_vel_y: 0.0
    #  max_vel_theta: 0.25
    #  min_speed_xy: -0.25
    #  max_speed_xy: 0.25
    #  min_speed_theta: -0.25
    #  # Add high threshold velocity for turtlebot 3 issue.
    #  # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
    #  acc_lim_x: 4.5
    #  acc_lim_y: 0.0
    #  acc_lim_theta: 4.5
    #  decel_lim_x: -4.5
    #  decel_lim_y: 0.0
    #  decel_lim_theta: -4.5
    #  vx_samples: 30
    #  vy_samples: 0
    #  vtheta_samples: 30
    #  sim_time: 3.0
    #  linear_granularity: 0.05
    #  angular_granularity: 0.017
    #  transform_tolerance: 0.2
    #  xy_goal_tolerance: 0.25
    #  trans_stopped_velocity: 0.1
    #  short_circuit_trajectory_evaluation: True
    #  stateful: True
    #  critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
    #  BaseObstacle.scale: 1.0
    #  PathAlign.scale: 32.0
    #  PathAlign.forward_point_distance: 0.1
    #  GoalAlign.scale: 24.0
    #  GoalAlign.forward_point_distance: 0.1
    #  PathDist.scale: 32.0
    #  GoalDist.scale: 24.0
    #  RotateToGoal.scale: 32.0
    #  RotateToGoal.slowing_factor: 5.0
    #  RotateToGoal.lookahead_time: -1.0
    #  Oscillation.scale: 10.0
    #  Oscillation.oscillation_reset_dist: 0.5
    #  Oscillation.oscillation_reset_angle: 0.2

    FollowPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"

      # === 속도 및 Lookahead ===
      desired_linear_vel: 0.5
      lookahead_dist: 0.6
      min_lookahead_dist: 0.3
      max_lookahead_dist: 0.9
      lookahead_time: 1.5

      # === 회전 동작 ===
      use_rotate_to_heading: false         # 정지 시 heading 맞추기 허용
      rotate_to_heading_min_angle: 0.5    # 최소 회전각 기준을 좀 낮춤 (기존 0.785 rad → 0.5 rad)
      rotate_to_heading_angular_vel: 1.8

      # === 후진 허용 ===
      allow_reversing: true               # 반드시 켜야 함! ★

      # === 충돌 방지 및 제어 ===
      use_collision_detection: true
      max_allowed_time_to_collision_up_to_carrot: 1.0
      min_distance_to_obstacle: 0.5       # 좁은 환경이라 2m → 0.5m 로 현실화

      # === 속도 스케일링 ===
      use_regulated_linear_velocity_scaling: true
      regulated_linear_scaling_min_radius: 0.9
      regulated_linear_scaling_min_speed: 0.1  # 너무 느리면 중단되므로 0.1 m/s 허용

      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 0.25
      use_cost_regulated_linear_velocity_scaling: false

      # === 기타 ===
      transform_tolerance: 0.1
      min_approach_linear_velocity: 0.05
      approach_velocity_scaling_dist: 0.6
      cost_scaling_dist: 0.3
      cost_scaling_gain: 1.0
      max_angular_accel: 3.2
      max_robot_pose_search_dist: 10.0
      stateful: true

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: map
      robot_base_frame: base_footprint
      use_sim_time: False
      rolling_window: true
      width: 10
      height: 10
      resolution: 0.01
      #robot_radius: 0.6
      footprint: "[[0.9,0.4], [0.9,-0.4], [-0.4,-0.4], [-0.4,0.4]]"
      plugins: ["obstacle_layer","keepout_filter", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 0.5
        cost_scaling_factor: 5.0
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          expected_update_rate: 10.0
          observation_persistence: 0.5
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      static_layer:
        map_subscribe_transient_local: True
      always_send_full_costmap: True
      filters: ["keepout_filter"]
      keepout_filter:
        plugin: "nav2_costmap_2d::KeepoutFilter"
        enabled: True
        filter_info_topic: "/costmap_filter_info"
        transform_tolerance: 0.1
  local_costmap_client:
    ros__parameters:
      use_sim_time: False
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 2.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_footprint
      use_sim_time: False
      #robot_radius: 0.6
      footprint: "[[0.9,0.5], [0.9,-0.5], [-0.4,-0.5], [-0.4,0.5]]"
      resolution: 0.01
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "keepout_filter","inflation_layer"]

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"
        enabled: True
        publish_voxel_map: True
        origin_z: 0.0
        z_resolution: 0.05
        z_voxels: 16
        max_obstacle_height: 2.0
        mark_threshold: 0
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 5.0
        inflation_radius: 0.5
      always_send_full_costmap: True
      filters: ["keepout_filter"]
      keepout_filter:
        plugin: "nav2_costmap_2d::KeepoutFilter"
        enabled: True
        filter_info_topic: "/costmap_filter_info"
        transform_tolerance: 0.1
  global_costmap_client:
    ros__parameters:
      use_sim_time: False
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

map_server:
  ros__parameters:
    use_sim_time: False
    yaml_filename: "map.yaml"

map_saver:
  ros__parameters:
    use_sim_time: False
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

costmap_filter_info_server:
  ros__parameters:
    use_sim_time: False
    type: 0
    filter_info_topic: "/costmap_filter_info"
    mask_topic: "/keepout_filter_mask"
    base: 0.0
    multiplier: 1.0
filter_mask_server:
  ros__parameters:
    use_sim_time: False
    frame_id: "map"
    topic_name: "/keepout_filter_mask"
    yaml_filename: "keepout_mask.yaml"




planner_server:
  ros__parameters:
    expected_planner_frequency: 10.0
    use_sim_time: False
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: True
      allow_unknown: true
    #GridBased:
    #  plugin: "nav2_smac_planner/SmacPlannerHybrid" # In Iron and older versions, "/" was used instead of "::"
    #  downsample_costmap: false           # whether or not to downsample the map
    #  motion_model: "DIFF_DRIVE"
    #  downsampling_factor: 1              # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
    #  tolerance: 0.25                     # dist-to-goal heuristic cost (distance) for valid tolerance endpoints if exact goal cannot be found.
    #  allow_unknown: false                 # allow traveling in unknown space
    #  max_iterations: 1000000             # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
    #  max_on_approach_iterations: 1000    # Maximum number of iterations after within tolerances to continue to try to find exact solution
    #  max_planning_time: 2.5              # max time in s for planner to plan, smooth
    #  motion_model_for_search: "REEDS_SHEPP"    # Hybrid-A* Dubin, Redds-Shepp
    #  angle_quantization_bins: 72         # Number of angle bins for search
    #  analytic_expansion_ratio: 3.5       # The ratio to attempt analytic expansions during search for final approach.
    #  analytic_expansion_max_length: 3.0  # For Hybrid/Lattice nodes: The maximum length of the analytic expansion to be considered valid to prevent unsafe shortcutting
    #  analytic_expansion_max_cost: 200.0  # The maximum single cost for any part of an analytic expansion to contain and be valid, except when necessary on approach to goal
    #  analytic_expansion_max_cost_override: false  #  Whether or not to override the maximum cost setting if within critical distance to goal (ie probably required)
    #  minimum_turning_radius: 0.4        # minimum turning radius in m of path / vehicle
    #  reverse_penalty: 1.8                # Penalty to apply if motion is reversing, must be => 1
    #  change_penalty: 0.2                 # Penalty to apply if motion is changing directions (L to R), must be >= 0
    #  non_straight_penalty: 1.3           # Penalty to apply if motion is non-straight, must be => 1
    #  cost_penalty: 2.5                   # Penalty to apply to higher cost areas when adding into the obstacle map dynamic programming distance expansion heuristic. This drives the robot more towards the center of passages. A value between 1.3 - 3.5 is reasonable.
    #  retrospective_penalty: 0.02
    #  lookup_table_size: 20.0             # Size of the dubin/reeds-sheep distance window to cache, in meters.
    #  cache_obstacle_heuristic: False     # Cache the obstacle map dynamic programming distance expansion heuristic between subsequent replannings of the same goal location. Dramatically speeds up replanning performance (40x) if costmap is largely static.
    #  debug_visualizations: False         # For Hybrid nodes: Whether to publish expansions on the /expansions topic as an array of poses (the orientation has no meaning) and the path's footprints on the /planned_footprints topic. WARNING: heavy to compute and to display, for debug only as it degrades the performance.
    #  use_quadratic_cost_penalty: False
    #  downsample_obstacle_heuristic: True
    #  allow_primitive_interpolation: False
    #  coarse_search_resolution: 4         # Number of bins to skip when doing a coarse search for the path. Only used for all_direction goal heading mode.
    #  goal_heading_mode: "BIDIRECTIONAL"        # DEFAULT, BIDIRECTIONAL, ALL_DIRECTION
    #  smooth_path: True                   # If true, does a simple and quick smoothing post-processing to the path

    #  smoother:
    #    max_iterations: 1000
    #    w_smooth: 0.4
    #    w_data: 0.2
    #    tolerance: 1.0e-10
    #    do_refinement: true
    #    refinement_num: 2


planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

#recoveries_server:
#  ros__parameters:
#    costmap_topic: local_costmap/costmap_raw
#    footprint_topic: local_costmap/published_footprint
#    cycle_frequency: 10.0
#    recovery_plugins: ["spin", "backup", "wait"]
#    spin:
#      plugin: "nav2_recoveries/Spin"
#    backup:
#      plugin: "nav2_recoveries/BackUp"
#    wait:
#      plugin: "nav2_recoveries/Wait"
#    global_frame: odom
#    robot_base_frame: base_footprint
#    transform_timeout: 0.1
#    use_sim_time: False
#    simulate_ahead_time: 2.0
#    max_rotational_vel: 0.05
#    min_rotational_vel: 0.05
#    rotational_acc_lim: 0.1

#behavior_server:
#  ros__parameters:
#    costmap_topic: local_costmap/costmap_raw
#    footprint_topic: local_costmap/published_footprint
#    cycle_frequency: 10.0
#    behavior_plugins: ["spin", "backup", "drive_on_heading", "wait"]
#    spin:
#      plugin: "nav2_behaviors/Spin"
#    backup:
#      plugin: "nav2_behaviors/BackUp"
#    drive_on_heading:
#      plugin: "nav2_behaviors/DriveOnHeading"
#    wait:
#      plugin: "nav2_behaviors/Wait"
#    global_frame: odom
#    robot_base_frame: base_footprint
#    transform_tolerance: 0.1
#    use_sim_time: False
#    simulate_ahead_time: 2.0
#    max_rotational_vel: 0.1
#    min_rotational_vel: -0.1
#    rotational_acc_lim: 0.1

behavior_server:
  ros__parameters:
    local_costmap_topic: local_costmap/costmap_raw
    local_footprint_topic: local_costmap/published_footprint
    #global_costmap_topic: global_costmap/costmap_raw
    #global_footprint_topic: global_costmap/published_footprint
    cycle_frequency: 10.0
    #behavior_plugins: ["spin", "backup", "drive_on_heading", "wait", "assisted_teleop"]
    behavior_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin" # In Iron and older versions, "/" was used instead of "::"
    backup:
      plugin: "nav2_behaviors/BackUp" # In Iron and older versions, "/" was used instead of "::"
    #drive_on_heading:
    #  plugin: "nav2_behaviors/DriveOnHeading" # In Iron and older versions, "/" was used instead of "::"
    wait:
      plugin: "nav2_behaviors/Wait" # In Iron and older versions, "/" was used instead of "::"
    #assisted_teleop:
    #  plugin: "nav2_behaviors/AssistedTeleop" # In Iron and older versions, "/" was used instead of "::"
    #local_frame: odom
    global_frame: odom
    robot_base_frame: base_footprint
    transform_tolerance: 0.1
    #transform_timeout: 1.0
    simulate_ahead_time: 5.0
    max_rotational_vel: 0.2
    min_rotational_vel: -0.2
    rotational_acc_lim: 0.1
    enable_stamped_cmd_vel: true  # default false in Jazzy or older

robot_state_publisher:
  ros__parameters:
    use_sim_time: False

waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: False
    smoothing_frequency: 20.0
    scale_velocities: True
    feedback: "OPEN_LOOP"
    max_velocity: [0.25, 0.0, 0.25]
    min_velocity: [-0.25, 0.0, -0.25]
    max_accel: [1.2, 0.0, 1.2]
    max_decel: [-1.2, 0.0, -1.2]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 0.5
